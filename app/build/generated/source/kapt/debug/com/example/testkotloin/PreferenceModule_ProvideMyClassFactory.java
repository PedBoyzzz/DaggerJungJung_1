// Generated by Dagger (https://google.github.io/dagger).
package com.example.testkotloin;

import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class PreferenceModule_ProvideMyClassFactory implements Factory<String> {
  private final PreferenceModule module;

  public PreferenceModule_ProvideMyClassFactory(PreferenceModule module) {
    this.module = module;
  }

  @Override
  public String get() {
    return provideInstance(module);
  }

  public static String provideInstance(PreferenceModule module) {
    return proxyProvideMyClass(module);
  }

  public static PreferenceModule_ProvideMyClassFactory create(PreferenceModule module) {
    return new PreferenceModule_ProvideMyClassFactory(module);
  }

  public static String proxyProvideMyClass(PreferenceModule instance) {
    return Preconditions.checkNotNull(
        instance.provideMyClass(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
