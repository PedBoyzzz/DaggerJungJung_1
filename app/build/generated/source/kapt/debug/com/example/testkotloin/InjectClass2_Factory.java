// Generated by Dagger (https://google.github.io/dagger).
package com.example.testkotloin;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class InjectClass2_Factory implements Factory<InjectClass2> {
  private final Provider<InjectClass> aProvider;

  public InjectClass2_Factory(Provider<InjectClass> aProvider) {
    this.aProvider = aProvider;
  }

  @Override
  public InjectClass2 get() {
    return provideInstance(aProvider);
  }

  public static InjectClass2 provideInstance(Provider<InjectClass> aProvider) {
    return new InjectClass2(aProvider.get());
  }

  public static InjectClass2_Factory create(Provider<InjectClass> aProvider) {
    return new InjectClass2_Factory(aProvider);
  }

  public static InjectClass2 newInjectClass2(InjectClass a) {
    return new InjectClass2(a);
  }
}
