// Generated by Dagger (https://google.github.io/dagger).
package com.example.testkotloin;

import androidx.fragment.app.Fragment;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import javax.inject.Provider;

public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<DispatchingAndroidInjector<Fragment>>
      fragmentDispatchingAndroidInjectorProvider;

  private final Provider<MyClass> cProvider;

  private final Provider<Info> infoProvider;

  private final Provider<Info2> info2Provider;

  private final Provider<AppModule.Info3> info3Provider;

  private final Provider<InjectClass> pProvider;

  private final Provider<InjectClass2> p2Provider;

  private final Provider<AwesomeManager> aProvider;

  private final Provider<A> a2Provider;

  private final Provider<AwesomeManager2> a3Provider;

  private final Provider<MainActivityViewModel> viewModelProvider;

  private final Provider<UserPreference> upProvider;

  public MainActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Fragment>> fragmentDispatchingAndroidInjectorProvider,
      Provider<MyClass> cProvider,
      Provider<Info> infoProvider,
      Provider<Info2> info2Provider,
      Provider<AppModule.Info3> info3Provider,
      Provider<InjectClass> pProvider,
      Provider<InjectClass2> p2Provider,
      Provider<AwesomeManager> aProvider,
      Provider<A> a2Provider,
      Provider<AwesomeManager2> a3Provider,
      Provider<MainActivityViewModel> viewModelProvider,
      Provider<UserPreference> upProvider) {
    this.fragmentDispatchingAndroidInjectorProvider = fragmentDispatchingAndroidInjectorProvider;
    this.cProvider = cProvider;
    this.infoProvider = infoProvider;
    this.info2Provider = info2Provider;
    this.info3Provider = info3Provider;
    this.pProvider = pProvider;
    this.p2Provider = p2Provider;
    this.aProvider = aProvider;
    this.a2Provider = a2Provider;
    this.a3Provider = a3Provider;
    this.viewModelProvider = viewModelProvider;
    this.upProvider = upProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<DispatchingAndroidInjector<Fragment>> fragmentDispatchingAndroidInjectorProvider,
      Provider<MyClass> cProvider,
      Provider<Info> infoProvider,
      Provider<Info2> info2Provider,
      Provider<AppModule.Info3> info3Provider,
      Provider<InjectClass> pProvider,
      Provider<InjectClass2> p2Provider,
      Provider<AwesomeManager> aProvider,
      Provider<A> a2Provider,
      Provider<AwesomeManager2> a3Provider,
      Provider<MainActivityViewModel> viewModelProvider,
      Provider<UserPreference> upProvider) {
    return new MainActivity_MembersInjector(
        fragmentDispatchingAndroidInjectorProvider,
        cProvider,
        infoProvider,
        info2Provider,
        info3Provider,
        pProvider,
        p2Provider,
        aProvider,
        a2Provider,
        a3Provider,
        viewModelProvider,
        upProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectFragmentDispatchingAndroidInjector(
        instance, fragmentDispatchingAndroidInjectorProvider.get());
    injectC(instance, cProvider.get());
    injectInfo(instance, infoProvider.get());
    injectInfo2(instance, info2Provider.get());
    injectInfo3(instance, info3Provider.get());
    injectP(instance, pProvider.get());
    injectP2(instance, p2Provider.get());
    injectA(instance, aProvider.get());
    injectA2(instance, a2Provider.get());
    injectA3(instance, a3Provider.get());
    injectViewModel(instance, viewModelProvider.get());
    injectUp(instance, upProvider.get());
  }

  public static void injectFragmentDispatchingAndroidInjector(
      MainActivity instance,
      DispatchingAndroidInjector<Fragment> fragmentDispatchingAndroidInjector) {
    instance.fragmentDispatchingAndroidInjector = fragmentDispatchingAndroidInjector;
  }

  public static void injectC(MainActivity instance, MyClass c) {
    instance.c = c;
  }

  public static void injectInfo(MainActivity instance, Info info) {
    instance.info = info;
  }

  public static void injectInfo2(MainActivity instance, Info2 info2) {
    instance.info2 = info2;
  }

  public static void injectInfo3(MainActivity instance, AppModule.Info3 info3) {
    instance.info3 = info3;
  }

  public static void injectP(MainActivity instance, InjectClass p) {
    instance.p = p;
  }

  public static void injectP2(MainActivity instance, InjectClass2 p2) {
    instance.p2 = p2;
  }

  public static void injectA(MainActivity instance, AwesomeManager a) {
    instance.a = a;
  }

  public static void injectA2(MainActivity instance, A a2) {
    instance.a2 = a2;
  }

  public static void injectA3(MainActivity instance, AwesomeManager2 a3) {
    instance.a3 = a3;
  }

  public static void injectViewModel(MainActivity instance, MainActivityViewModel viewModel) {
    instance.viewModel = viewModel;
  }

  public static void injectUp(MainActivity instance, UserPreference up) {
    instance.up = up;
  }
}
