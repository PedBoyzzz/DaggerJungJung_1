// Generated by Dagger (https://google.github.io/dagger).
package com.example.testkotloin;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class MainActivityViewModel_Factory implements Factory<MainActivityViewModel> {
  private final Provider<Float> fProvider;

  public MainActivityViewModel_Factory(Provider<Float> fProvider) {
    this.fProvider = fProvider;
  }

  @Override
  public MainActivityViewModel get() {
    return provideInstance(fProvider);
  }

  public static MainActivityViewModel provideInstance(Provider<Float> fProvider) {
    return new MainActivityViewModel(fProvider.get());
  }

  public static MainActivityViewModel_Factory create(Provider<Float> fProvider) {
    return new MainActivityViewModel_Factory(fProvider);
  }

  public static MainActivityViewModel newMainActivityViewModel(float f) {
    return new MainActivityViewModel(f);
  }
}
