// Generated by Dagger (https://google.github.io/dagger).
package com.example.testkotloin;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class AwesomeManager2_Factory implements Factory<AwesomeManager2> {
  private final Provider<UserPreference> aProvider;

  public AwesomeManager2_Factory(Provider<UserPreference> aProvider) {
    this.aProvider = aProvider;
  }

  @Override
  public AwesomeManager2 get() {
    return provideInstance(aProvider);
  }

  public static AwesomeManager2 provideInstance(Provider<UserPreference> aProvider) {
    return new AwesomeManager2(aProvider.get());
  }

  public static AwesomeManager2_Factory create(Provider<UserPreference> aProvider) {
    return new AwesomeManager2_Factory(aProvider);
  }

  public static AwesomeManager2 newAwesomeManager2(UserPreference a) {
    return new AwesomeManager2(a);
  }
}
