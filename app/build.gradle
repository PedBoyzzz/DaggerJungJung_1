apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.example.testkotloin"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
            noCompress "tflite"
            noCompress "lite"
        }
    }
    buildTypes {
        //https://medium.com/@ramonrabello/best-practices-for-working-with-different-build-types-c5cd08b1adc6
        debug {
            debuggable true
            //buildConfigField "String", 'URL', "https://dev-api.yourbackend.com"
        }
        release {
            //buildConfigField "String", 'URL', "https://dev-api.yourbackend.com"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }



    }//java.lang.reflect.InvocationTargetException (no error message)
}
//https://wajahatkarim.com/2018/04/difference-between-build-type-flavour-and-build-variant-in-android/
dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'

    //implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:2.0.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    //implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    //implementation 'androidx.room:room-runtime:2.0.0'
    //kapt 'androidx.room:room-compiler:2.0.0'
    implementation 'org.tensorflow:tensorflow-android:+'
    implementation 'com.squareup.retrofit2:retrofit:2.2.0'
    //https://medium.com/@prakash_pun/retrofit-a-simple-android-tutorial-48437e4e5a23
    implementation 'com.squareup.retrofit2:converter-gson:2.2.0'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
    implementation("com.squareup.okhttp3:okhttp:4.0.1")
    implementation 'io.reactivex.rxjava2:rxjava:2.1.9'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'androidx.core:core:1.0.0'
    implementation 'com.google.firebase:firebase-messaging:20.0.0'


    def dagger_version = "2.16"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation("com.google.dagger:dagger-android:$dagger_version") {
        exclude group: "com.android.support"
    }
    implementation("com.google.dagger:dagger-android-support:$dagger_version") {
        exclude group: "com.android.support"
    }
    kapt("com.google.dagger:dagger-android-processor:$dagger_version") {
        exclude group: "com.android.support"
    }
    def fragment_version = "1.2.4"
    implementation("androidx.fragment:fragment-ktx:$fragment_version")
}
